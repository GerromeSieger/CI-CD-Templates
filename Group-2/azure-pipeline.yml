# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '16d3a595-e73b-4945-8ef8-6afe91aa4f09'
  containerRegistry: 'dockerhub1.azurecr.io'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Test the django & the react applications 
  jobs:
  - job: Tests
    displayName: Unit Tests
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: CmdLine@2
      inputs:
        script: 'pip install --no-cache-dir -r backend/requirements.txt'
    - task: PythonScript@0
      inputs:
        scriptSource: 'filePath'
        scriptPath: 'backend/accounts/tests.py'  
          
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'frontend'
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'frontend'
        customCommand: 'test'

- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build & Push
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and Push backend image to container registry
      inputs:
        command: buildAndPush
        repository: $(backend-image)
        dockerfile: '$(Build.SourcesDirectory)/backend/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and Push frontend image to container registry
      inputs:
        command: buildAndPush
        repository: $(frontend-image)
        dockerfile: '$(Build.SourcesDirectory)/frontend/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/k8s'
        artifact: 'k8s-files'
        publishLocation: 'pipeline'
      
- stage: Deploy
  displayName: Deploy to Staging environment
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'k8s-files'
        targetPath: '$(Pipeline.Workspace)/k8s'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'k8s-vic-1-default-1247'
        namespace: default
        manifests: |
          $(Pipeline.Workspace)/k8s/deployment.yml
          $(Pipeline.Workspace)/k8s/service.yml
          $(Pipeline.Workspace)/k8s/ingress.yml                 
          $(Pipeline.Workspace)/k8s/secret.yml
          $(Pipeline.Workspace)/k8s/statefulset.yml                 
                    
- stage: Deploy
  displayName: Deploy to Production environment
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'k8s-files'
        targetPath: '$(Pipeline.Workspace)/k8s'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'k8s-vic-1-default-1247'
        namespace: default
        manifests: |
          $(Pipeline.Workspace)/k8s/deployment.yml
          $(Pipeline.Workspace)/k8s/service.yml
          $(Pipeline.Workspace)/k8s/ingress.yml                 
          $(Pipeline.Workspace)/k8s/secret.yml
          $(Pipeline.Workspace)/k8s/statefulset.yml                 
    - task: ManualValidation@0
      inputs:
        notifyUsers: 'vsifah@outlook.com'
        instructions: 'Please review and approve deployment'
        onTimeout: 'resume'          
                                        